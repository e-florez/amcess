# content of: tox.ini , put in same dir as setup.py
[tox]
minversion = 3.24.0
envlist = 
    clean,
    flake8,
    mypy,
    py38, 
    coverage,   
    docs         


[testenv:clean]
commands=
    coverage erase

[testenv:flake8]
basepython = python3.8
deps = 
    flake8
    ; flake8-black
    flake8-isort
    isort<5
commands = flake8 --extend-ignore=I001,I003,I004 src tests data

; [testenv:mypy]
; basepython = python3.8
; deps =
;     mypy
; commands = mypy src/ tests/ data/

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    ; -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements_dev.txt

[testenv:coverage]
deps = 
    -r{toxinidir}/requirements_dev.txt
commands =
    pytest -v --basetemp={envtmpdir} 
    pytest --nbmake workflow/  --ignore=workflow/testing
    pytest --cov=tests/ --cov=src/ --cov=data/ --cov-append --cov-report=term-missing #--fail-under=80
    
[testenv:py38]
basepython = python3.8
deps =
    -r{toxinidir}/requirements.txt
commands =
    python setup.py sdist

; [testenv:docs]
; description = invoke sphinx-build to build the HTML docs
; basepython = python3.8
; ; changedir = docs
; deps = 
;     pytest
;     sphinx
;     sphinx_rtd_theme
;     myst-parser
; commands = 
;     sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -b html {posargs}
;     python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:end]
commands =
    coverage report --omit='.tox/*'
    coverage html --omit='.tox/*'

; ===========================================================================
; # contet of: tox.ini , put in same dir as setup.py
; [tox]
; minversion = 3.8.0
; envlist = py38, py39, style, coverage, check-manifest, flake8, mypy
; isolated_build = true

; [gh-actions]
; python =
;     3.8: py38
;     3.9: py39, mypy, flake8

; [testenv]
; setenv =
;     PYTHONPATH = {toxinidir}
; deps =
;     -r{toxinidir}/requirements_dev.txt
; commands =
;     pytest --basetemp={envtmpdir}

; # [testenv:style]
; # deps =
; #     flake8
; #     flake8-black
; #     flake8-isort
; # commands = flake8 setup.py src/ tests/ {postargs}

; [testenv:coverage]
; deps = 
;     coverage
;     pytest-cov
; coverage = 
;     pytest tests/ --cov=src/ --cov-append --cov-report=term-missing #--fail-under=80

; [testenv:check-manifest]
; deps = check-manisfet
; commands = check-manifest

; [testenv:flake8]
; basepython = python3.9
; deps = flake8
; commands = flake8 src tests

; [testenv:mypy]
; basepython = python3.9
; deps =
;     -r{toxinidir}/requirements_dev.txt
; commands = mypy src
